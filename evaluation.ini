[General] #Abstract
network = TrafficGeneratorNetwork
sim-time-limit = 10s

#Statistics
#Enable only what we are interested in 
*.node[*].application[*].*.statistic-recording = true
*.node[*].MCO.mgmt.*.statistic-recording = true
*.node[*].MCO.vehicleTable.*.statistic-recording = true
*.node[*].MCO.binQueue.*.statistic-recording = true
*.node[*].MCO.queue[*].*.statistic-recording = true
*.node[*].wlan[*].mac.*.statistic-recording = true
#And then disable the rest
**.statistic-recording = false
**.vector-record-eventnumbers = false
**.cmdenv-log-level = "off"

# Network settings
# radioMedium settings
*.radioMedium.neighborCache.typename = "VehiclesNeighborCache"
*.radioMedium.analogModel.typename = "ScalarAnalogModelAdjacentInterference"
*.radioMedium.analogModel.adjacentLoss = "25.9 40.6"
*.radioMedium.pathLoss.typename = "ECC68RuralPathLoss"
*.radioMedium.pathLoss.useFading = true
*.radioMedium.pathLoss.shapeFactor = 3.0

# With this simulation profile we can establish comparisons in order to see how adjacent interference affects Load Balancing mechanism. When we have only one application (numApplications=1), we are only interested in one run. Any of them is valid. runfilter used: -r '$numApplications=2 || ($numApplications=1 && $packetRate=14)'
[SingleReferenceChannel]
repeat = 5

# node settings
#*.nodes = density of vehicles(12.5, 25, 50, 75, 100) * number of kms(8) = 100, 200, 400, 600, 800
*.nodes = 50
*.node[*].numApplications = ${numApplications = 1, 2}
*.node[*].numChannels = 1
# application settings
# packetRate values are chosen based on the load that a certain channel in a node receives for each number of applications in the target simulations
*.node[*].application[0].typename = "PeriodicTrafficGenerator"
*.node[*].application[0].packetLength = 350B
*.node[*].application[0].timeBetweenPackets = 1/8
*.node[*].application[1].typename = "TrafficGenerator"
*.node[*].application[1].packetLength = 350B
*.node[*].application[1].packetRate = ${packetRate = 14, 28, 42, 57, 71} #${packetRate = ceil((50+1*100)/7)-8, ceil((50+2*100)/7)-8, ceil((50+3*100)/7)-8, ceil((50+4*100)/7)-8, ceil((50+5*100)/7)-8}
# wlan settings
*.node[*].wlan[*].radio.antenna.typename = "ConstantGainAntenna"
*.node[*].wlan[*].radio.antenna.gain = 3dB #The antenna gain value should be 3 dB only at the receiver (transmitter power -3dB)
*.node[*].wlan[*].radio.transmitter.power = 0.1W #0.1W = 20 dBm, 20dBm + 3dBi(antenna gain) = 23dBm
# mobility settings
*.node[*].mobility.typename = "HighwayMobility"
#*.node[*].mobility.speed = speed value(number of nodes) = 325/9(100), 100/3(200), 275/9(400), 250/9(600), 200/9(800)
*.node[*].mobility.speed = mps(normal(325/9, 325/90))
# MCO settings
*.node[*].MCO.typename = "MCOLoadBalancing"
*.node[*].MCO.classifier.weights = "1"
*.node[*].MCO.mgmt.pdrDistanceStep = 100m
*.node[*].MCO.mgmt.pdrNumberIntervals = 20
*.node[*].MCO.interferenceMonitor.typename = ""
*.node[*].MCO.vehicleTable.irtRange = 200m
*.node[*].MCO.vehicleTable.enableIrtPeriodic = true

[LoadBalancing] #Abstract
repeat = 5

# node settings
#*.nodes = density of vehicles(12.5, 25, 50, 75, 100) * number of kms(8) = 100, 200, 400, 600, 800
*.nodes = ${nodes = 50, 100}
*.node[*].numApplications = ${numApplications = 1, 2, 3, 4, 5, 6}
*.node[*].numChannels = 7
# application settings
*.node[*].application[0].typename = "PeriodicTrafficGenerator"
*.node[*].application[0].packetLength = 350B
*.node[*].application[1..].typename = "TrafficGenerator"
*.node[*].application[1..].packetLength = 350B
# wlan settings
*.node[*].wlan[*].radio.antenna.typename = "ConstantGainAntenna"
*.node[*].wlan[*].radio.antenna.gain = 3dB #The antenna gain value should be 3 dB only at the receiver (transmitter power -3dB)
*.node[*].wlan[*].radio.transmitter.power = 0.1W #0.1W = 20 dBm, 20dBm + 3dBi(antenna gain) = 23dBm
# mobility settings
*.node[*].mobility.typename = "HighwayMobility"
#*.node[*].mobility.speed = speed value(number of nodes) = 325/9(100), 100/3(200), 275/9(400), 250/9(600), 200/9(800)
*.node[*].mobility.speed = mps(normal(325/9, 325/90))
# MCO settings
*.node[*].MCO.mgmt.pdrDistanceStep = 100m
*.node[*].MCO.mgmt.pdrNumberIntervals = 20
*.node[*].MCO.interferenceMonitor.typename = ""
*.node[*].MCO.vehicleTable.irtRange = 200m
*.node[*].MCO.vehicleTable.enableIrtPeriodic = true

[LoadBalancing_no_CC]
extends = LoadBalancing

# MCO settings
*.node[*].MCO.typename = "MCOLoadBalancing"
*.node[*].MCO.classifier.typename = "RandomStartWrrClassifier"
*.node[*].MCO.classifier.weights = "1 1 1 1 1 1 1"

[LoadBalancing_CC]
extends = LoadBalancing

# MCO settings
*.node[*].MCO.typename = "MCOLoadBalancingCC"
*.node[*].MCO.classifier.typename = "RandomStartWrrClassifierCC"
*.node[*].MCO.classifier.weights = "1 1 1 1 1 1 1 0"

[SequentialFilling] #Abstract
repeat = 5

# node settings
#*.nodes = density of vehicles(12.5, 25, 50, 75, 100) * number of kms(8) = 100, 200, 400, 600, 800
*.nodes = ${nodes = 50, 100}
*.node[*].numApplications = ${numApplications = 1, 2, 3, 4, 5, 6}
*.node[*].numChannels = 7
# application settings
*.node[*].application[0].typename = "PeriodicTrafficGenerator"
*.node[*].application[0].packetLength = 350B
*.node[*].application[1..].typename = "TrafficGenerator"
*.node[*].application[1..].packetLength = 350B
# wlan settings
*.node[*].wlan[*].radio.antenna.typename = "ConstantGainAntenna"
*.node[*].wlan[*].radio.antenna.gain = 3dB #The antenna gain value should be 3 dB only at the receiver (transmitter power -3dB)
*.node[*].wlan[*].radio.transmitter.power = 0.1W #0.1W = 20 dBm, 20dBm + 3dBi(antenna gain) = 23dBm
# mobility settings
*.node[*].mobility.typename = "HighwayMobility"
#*.node[*].mobility.speed = speed value(number of nodes) = 325/9(100), 100/3(200), 275/9(400), 250/9(600), 200/9(800)
*.node[*].mobility.speed = mps(normal(325/9, 325/90))
# MCO settings
*.node[*].MCO.typename = "PredefinedSequentialMCO"
*.node[*].MCO.mgmt.pdrDistanceStep = 100m
*.node[*].MCO.mgmt.pdrNumberIntervals = 20
*.node[*].MCO.interferenceMonitor.typename = ""
*.node[*].MCO.vehicleTable.irtRange = 200m
*.node[*].MCO.vehicleTable.enableIrtPeriodic = true

[SequentialFilling_no_CC]
extends = SequentialFilling

# MCO settings
*.node[*].MCO.mgmt.maxChannelCapacity = "0.8 0.8 0.8 0.8 0.8 0.8 0.8"

[SequentialFilling_CC]
extends = SequentialFilling

# MCO settings
*.node[*].MCO.mgmt.maxChannelCapacity = "0.62 0.62 0.62 0.62 0.62 0.62 0.62"
